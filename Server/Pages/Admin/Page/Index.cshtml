@page
@model Server.Pages.Admin.Page.IndexModel
@{
    var pageTitle =
        Resources.PageTitles.Index;

    ViewData["PageTitle"] = pageTitle;
}

<div class="row">
    <div class="col table-responsive">
        <a asp-page="Create">@(Resources.PageTitles.CreatePage)</a>
        <table class="table table-bordered table-sm table-striped table-hover">
            <caption>@(Resources.PageTitles.PageIndex)</caption>
            <thead class="table-primary">
            <tr>
                <th scope="col">
                    #
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.ViewModel[0].Title)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.ViewModel[0].Author)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.ViewModel[0].IsActive)
                </th>
                <th scope="col">

                </th>
            </tr>
            </thead>

            <tbody>
            @for (var index = 0; index <= Model.ViewModel.Count - 1; index++)
            {
                var item = Model.ViewModel[index];

                <tr>
                    <th scope="row">
                        @(index + 1)
                    </th>
                    <td>
                        @(item.Title)
                    </td>
                    <td>
                        @(item.Author)
                    </td>
                    <td>
                        @if (item.IsActive)
                        {
                          <span><i class="bi bi-check"></i></span>
                        }
                        else
                        {
                            <span><i class="bi bi-x"></i></span>
                        }
                    </td>
                    <td>
                        <a asp-page="./Update" asp-route-id="@item.Id">@(Resources.PageTitles.UpdatePage)</a> |
                        <a asp-page="./Details" asp-route-id="@item.Id">@(Resources.PageTitles.PageDetails)</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id">@(Resources.PageTitles.DeletePage)</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
        @{
            var prevDisabled = !Model.ViewModel.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.ViewModel.HasNextPage ? "disabled" : "";
        }

        <a asp-page="./Index"
           asp-route-pageIndex="@(Model.ViewModel.PageIndex - 1)"
           class="btn btn-primary @prevDisabled">
            @(Resources.ButtonCaptions.Previous)
        </a>
        <a asp-page="./Index"
           asp-route-pageIndex="@(Model.ViewModel.PageIndex + 1)"
           class="btn btn-primary @nextDisabled">
            @(Resources.ButtonCaptions.Next)
        </a>
    </div>
</div>
